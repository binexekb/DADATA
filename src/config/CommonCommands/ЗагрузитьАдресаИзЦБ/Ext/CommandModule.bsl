
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	//Вставить содержимое обработчика.
	//ПараметрыФормы = Новый Структура("", );
	//ОткрытьФорму("ОбщаяФорма.", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно, ПараметрыВыполненияКоманды.НавигационнаяСсылка);
	
	лКоличествоОбновлено = 0;
	ЗагрузитьАдресаИзЦБ(лКоличествоОбновлено);
	ПоказатьОповещениеПользователя("Обновлено: " + лКоличествоОбновлено);
КонецПроцедуры

Процедура ЗагрузитьАдресаИзЦБ(пСчетчикОбновлений)
	Запрос = Новый Запрос;
	
	лТЗ = ПолучитьАдресаИзЦБ();
	Запрос.УстановитьПараметр("лТЗ",лТЗ); 
	
	
	Запрос.Текст =
				"ВЫБРАТЬ
				|	ТЗ.ИД КАК ИД,
				|	ТЗ.ИсходныйАдрес КАК ИсходныйАдрес,
				|	ТЗ.ГЛН КАК ГЛН
				|ПОМЕСТИТЬ ВремТаб
				|ИЗ
				|	&лТЗ КАК ТЗ
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ИД
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЕСТЬNULL(Адреса.Ссылка, НЕОПРЕДЕЛЕНО) КАК АдресСсылка,
				|	ВремТаб.ИсходныйАдрес <> ЕСТЬNULL(Адреса.ИсходныйАдрес, ЛОЖЬ) КАК Обновить,
				|	ВремТаб.ИД,
				|	ВремТаб.ИсходныйАдрес,
				|	ВремТаб.ГЛН
				|ИЗ
				|	ВремТаб КАК ВремТаб
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Адреса КАК Адреса
				|		ПО ВремТаб.ИД = Адреса.ИД";

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Обновить Тогда
			Если ЗначениеЗаполнено(Выборка.АдресСсылка) Тогда
				лЭлементОбъект = Выборка.АдресСсылка.ПолучитьОбъект();
			Иначе
				лЭлементОбъект = Справочники.Адреса.СоздатьЭлемент();
			КонецЕсли; 
			
			ЗаполнитьЗначенияСвойств(лЭлементОбъект,Выборка);
			лЭлементОбъект.Наименование = лЭлементОбъект.ИсходныйАдрес;
			лЭлементОбъект.ДатаЗагрузкиИзЦБ = ТекущаяДата();
			лЭлементОбъект.Записать();
			
			пСчетчикОбновлений = пСчетчикОбновлений + 1;
		КонецЕсли; 
	КонецЦикла;
		
КонецПроцедуры

Функция ПолучитьАдресаИзЦБ()
	
	лТЗ = Новый ТаблицаЗначений;
	лТЗ.Колонки.Добавить("ИД",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(60)));
	лТЗ.Колонки.Добавить("ИсходныйАдрес",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100)));
	лТЗ.Колонки.Добавить("ГЛН",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(20)));
	
	лБаза = КэшФункции.ПолучитьКомСоединение();
	
	Если лБаза = 0 Тогда
		Возврат лТЗ;
	КонецЕсли; 
	
	МинимальнаяДатаАнализаПродаж = ДобавитьМесяц(ТекущаяДата(),-3);
	
	Запрос77 = лБаза.CreateObject("Запрос");
	ТекстЗапроса = "Адрес = Документ.Реализация._МаршрутныйАдрес.ТекущийЭлемент;
					|Наименование = Документ.Реализация._МаршрутныйАдрес.Наименование;
					|ГЛН = Документ.Реализация._МаршрутныйАдрес.Поле1;
					|ДатаДок = Документ.Реализация.ДатаДок;
					|Группировка Адрес;
					|Группировка Наименование;
					|Группировка ГЛН;
					|Условие(ДатаДок >= '"+Формат(МинимальнаяДатаАнализаПродаж,"ДФ=dd-MM-yyy")+"');
					|";
					
	Запрос77.Выполнить(ТекстЗапроса);
	
	Пока Запрос77.Группировка("Адрес") = 1 Цикл
		Пока Запрос77.Группировка("Наименование") = 1 Цикл
			Пока Запрос77.Группировка("ГЛН") = 1 Цикл
				ИДАдреса = лБаза.ЗначениеВСтрокуВнутр(Запрос77.Адрес.ТекущийЭлемент());
	
				лСтрокаТЗ = лТЗ.Добавить();
				лСтрокаТЗ.ИсходныйАдрес = СокрЛП(Запрос77.Наименование);
				лСтрокаТЗ.ГЛН = СокрЛП(Запрос77.ГЛН);
				лСтрокаТЗ.ИД = СокрЛП(ИДАдреса); 
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
			
	Возврат лТЗ;

КонецФункции

