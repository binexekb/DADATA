
Функция ПолучитьОбъект77(пБаза,пМетаданные77,пИД = Неопределено)Экспорт
	лОбъект = пБаза.CreateObject(пМетаданные77);
	
	Если пИД <> Неопределено Тогда
		лИД = СтрЗаменить(пИД,"""","""""");
		лСсылка = пБаза.EvalExpr("ЗначениеИзСтрокиВнутр("""+лИД+""")");
		лОбъект.НайтиЭлемент(лСсылка);
	КонецЕсли; 
	
	Возврат лОбъект;
КонецФункции
 
Функция ПолучитьСсылку77(пБаза,пИД)Экспорт
	лИД = СтрЗаменить(пИД,"""","""""");
	лСсылка = пБаза.EvalExpr("ЗначениеИзСтрокиВнутр("""+лИД+""")");
	
	Возврат лСсылка;
КонецФункции

Процедура ОтправитьАдресаВЦБ(пАдреса,пОтправлено = 0)Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Регионы.Ссылка КАК Регион,
		|	РайоныГородаРегионов.Ссылка КАК РайонГородРегиона,
		|	Адреса.Ссылка КАК Адрес
		|ИЗ
		|	Справочник.Адреса КАК Адреса
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Адреса КАК РайоныГородаРегионов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Адреса КАК Регионы
		|			ПО РайоныГородаРегионов.Родитель = Регионы.Ссылка
		|		ПО Адреса.Родитель = РайоныГородаРегионов.Ссылка
		|ГДЕ
		|	Адреса.Ссылка В(&пАдреса)
		|ИТОГИ ПО
		|	Регион,
		|	РайонГородРегиона";
		
	Запрос.УстановитьПараметр("пАдреса",пАдреса);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	лБаза = КэшФункции.ПолучитьКомСоединение();
	
	Если лБаза = 0 Тогда
		ОбновитьПовторноИспользуемыеЗначения();
		ВызватьИсключение "Ошибка подключения к ЦБ";
	КонецЕсли; 
	
	ВыборкаРегион = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаРегион.Следующий() Цикл

		Если ЗначениеЗаполнено(ВыборкаРегион.Регион.ИД) Тогда
			лРегион77 = Модуль77.ПолучитьСсылку77(лБаза,ВыборкаРегион.Регион.ИД);
		Иначе
			лРегион77 = Модуль77.ПолучитьОбъект77(лБаза,"Справочник.Регионы");
			лРегион77.Новый();
			лРегион77.Наименование = ВыборкаРегион.Регион.Наименование;
			лРегион77.Записать();
			лРегион77 = лРегион77.ТекущийЭлемент();
			
			лРегион = ВыборкаРегион.Регион.ПолучитьОбъект();
			лРегион.ИД = лБаза.ЗначениеВСтрокуВнутр(лРегион77);
			лРегион.Записать();
		КонецЕсли; 
		
		ВыборкаРайонГородРегиона = ВыборкаРегион.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаРайонГородРегиона.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаРайонГородРегиона.РайонГородРегиона.ИД) Тогда
				лРайонГородРегион77 = Модуль77.ПолучитьСсылку77(лБаза,ВыборкаРайонГородРегиона.РайонГородРегиона.ИД);
			Иначе
				лРайонГородРегион77 = Модуль77.ПолучитьОбъект77(лБаза,"Справочник.РайоныГородаРегионов");
				лРайонГородРегион77.Новый();
				лРайонГородРегион77.Владелец = лРегион77;
				лРайонГородРегион77.Наименование = ВыборкаРайонГородРегиона.РайонГородРегиона.Наименование;
				лРайонГородРегион77.Записать();
				лРайонГородРегион77 = лРайонГородРегион77.ТекущийЭлемент();
				
				лРайонГородРегиона = ВыборкаРайонГородРегиона.РайонГородРегиона.ПолучитьОбъект();
				лРайонГородРегиона.ИД = лБаза.ЗначениеВСтрокуВнутр(лРайонГородРегион77);
				лРайонГородРегиона.Родитель = ВыборкаРегион.Регион;
				лРайонГородРегиона.Записать();
			КонецЕсли; 
			
			ВыборкаДетальныеЗаписи = ВыборкаРайонГородРегиона.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				лАдрес = ВыборкаДетальныеЗаписи.Адрес;
				
				лАдрес77 = Модуль77.ПолучитьОбъект77(лБаза,"Справочник.Адреса",лАдрес.ИД);
				лАдрес77.РаспознанныйАдрес = лАдрес.СтандартизованныйАдрес;
				лАдрес77.РайонГородРегиона = лРайонГородРегион77;
				лАдрес77.Гео_ш = лАдрес.КоордШирота;
				лАдрес77.Гео_д = лАдрес.КоордДолгота;
				лАдрес77.Гео_точность = лАдрес.КодТочностиКоординат;
				лАдрес77.КодКачества = лАдрес.КодПроверкиАдреса;
				лАдрес77.Записать();
				
				пОтправлено = пОтправлено + 1;
				
				лАдресОбъект = лАдрес.ПолучитьОбъект();
				лАдресОбъект.ДатаОтправкиВЦБ = ТекущаяДата();
				лАдресОбъект.Записать();

			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры
